#!/bin/bash
# Bash front end for the compiler
# You are free to change the language used for this script,
# but do *not* change its name.

if [ -z $1 ]
then
    echo "No file/path has been supplied!";
fi

printHelpFunction()
{
  echo "Usage: ./refCompile [options] <target.wacc> "
  echo -e "\toptions:"
  echo -e "\t\t-p, --parse_only                 Parse only. Check the input file for syntax errors and generate an AST."
  echo -e "\t\t-s, --semantic_check             Semantic check. Parse the file for syntax and semantic errors and generate an AST."
  echo -e "\t\t-t, --print_ast                  View AST. Display AST generated by the parser."
  echo -e "\t\t-a, --print_asm                  View Assembly. Display ARM assembly code generated by the code generator."
#  echo -e "\t\t-x, --execute                    Execute. Assemble and Emulate the generated ARM code and display its output."
  echo -e "\t\t-h, --help                       Show this message"
  echo -e "target.wacc: path to wacc program file to compile (or target directory if -dir option set)"
  exit 1
}

while getopts "pto:axh" opt
do
   case $opt in
      p ) PARSE_ONLY="--parse_only" ;;
      t ) PRINT_AST="--print_ast" ;;
      a ) ASSEMBLY="--assembly" ;;
#      x ) EXECUTE="--execute" ;;
      h ) helpFunction ;;
      ? ) helpFunction ;; # Print helpFunction otherwise
   esac
done

# compile the given wacc file here
kotlin -cp ./bin:./lib/antlr-4.9.3-complete.jar MainKt "$1" $PARSE_ONLY $PRINT_AST "--assembly"